// Generated by CoffeeScript 1.6.1
(function() {
  var UserInterface;

  UserInterface = (function() {

    function UserInterface(_manager) {
      var id, item, _ref,
        _this = this;
      this._manager = _manager;
      this._initializeUI();
      this._suppressRefreshCalls = true;
      _ref = this._manager.getItems();
      for (id in _ref) {
        item = _ref[id];
        this._onItemChanged(item);
      }
      this._suppressRefreshCalls = false;
      $('#items').listview('refresh');
      this._manager.onChange(function(item) {
        return _this._onItemChanged(item);
      });
    }

    UserInterface.prototype._initializeUI = function() {
      var _this = this;
      $('#categorySelector').change(function() {
        return _this._showHideBasedOnCategory($('.item'));
      });
      return $('#newItem').click(function() {
        var text;
        text = window.prompt("Text");
        if (text != null) {
          return _this._manager.saveItem(Item.createNew(text, _this._currentCategory()));
        }
      });
    };

    UserInterface.prototype._currentCategory = function() {
      return $('#categorySelector').val();
    };

    UserInterface.prototype._showHideBasedOnCategory = function(items, category) {
      var showCondition;
      if (category == null) {
        category = this._currentCategory();
      }
      showCondition = function(e) {
        return category === '' || $(e).data('category') === category;
      };
      items.filter(function() {
        return !showCondition(this);
      }).hide();
      return items.filter(function() {
        return showCondition(this);
      }).show();
    };

    UserInterface.prototype._onItemChanged = function(item) {
      var element;
      element = $('#item_' + item.getID());
      if (element.length === 0) {
        element = this._createElement(item.getID());
      }
      $('.text', element).text(item.getText());
      element.data('category', item.getCategory());
      this._showHideBasedOnCategory(element);
      if (!this._suppressRefreshCalls) {
        $('#items').listview('refresh');
      }
      if (item.getResolved()) {
        return element.data('icon', 'check');
      }
    };

    UserInterface.prototype._createElement = function(id) {
      var _this = this;
      return $('<li class="item" data-icon="false"><a class="text" href="#"></a></li>').attr('id', 'item_' + id).appendTo('#items').click(function() {
        return _this._itemClicked(id);
      });
    };

    UserInterface.prototype._itemClicked = function(id) {
      var item, text;
      item = this._manager.getItems()[id];
      if (item != null) {
        text = window.prompt("Text", item.getText());
        if (text != null) {
          return this._manager.saveItem(item.setText(text));
        }
      }
    };

    return UserInterface;

  })();

  (typeof exports !== "undefined" && exports !== null ? exports : this).UserInterface = UserInterface;

}).call(this);
